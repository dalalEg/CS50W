name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend (Django + Coverage)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: movie_theater
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U django -d movie_theater"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports: ["6379:6379"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run Backend Linter
        run: |
          cd backend
          flake8

      - name: Run Django tests with coverage
        env:
          DATABASE_URL: postgres://django:django@localhost:5432/movie_theater
          REDIS_URL: redis://localhost:6379/0
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          cd backend
          coverage run manage.py test
          coverage report --fail-under=80
          coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: backend/coverage.xml
          flags: backend

  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd movie-theater-frontend
          npm ci

      - name: Run Frontend Linter
        run: |
          cd movie-theater-frontend
          npm run lint

      - name: Run build
        run: |
          cd movie-theater-frontend
          npm run build --if-present

      - name: Run tests
        run: |
          cd movie-theater-frontend
          npm test -- --watchAll=false
