name: CI/CD Pipeline

on:
  push:
    branches:
      - main   # Only deploy on main branch

jobs:
  # --- React frontend build & deploy ---
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: movie_theater_project/movie-theater-frontend
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --watchAll=false

      - name: Build React app
        run: npm run build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0.0
        with:
          publish-dir: ./build
          production-deploy: true
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # --- Django backend build & deploy ---
  backend:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --requirepass ""  # no password if not needed
    defaults:
      run:
        working-directory: movie_theater_project/backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Collect static files
        run: python manage.py collectstatic --noinput
      - name: Wait for Redis to be ready
        run: |
          echo "Waiting for Redis..."
          for i in {1..10}; do
            nc -z localhost 6379 && break
            sleep 1
          done

      - name: Start Celery Worker
        run: nohup celery -A movie_theater worker --loglevel=info --pool=solo &

      - name: Start Celery Beat
        run: nohup celery -A movie_theater beat --loglevel=info --pool=solo &

      - name: Run Django tests
        run: python manage.py test

      - name: Deploy to Render
        if: success()
        run: curl -X POST "$RENDER_DEPLOY_HOOK"
