"""
Django settings for movie_theater project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url
from celery.schedules import crontab

BASE_DIR = Path(__file__).resolve().parent.parent


# Environment
ENVIRONMENT = os.getenv("DJANGO_ENV", "development")
DEBUG = os.getenv("DEBUG", "False").lower() == "true"
SECRET_KEY = os.getenv("SECRET_KEY", "dev-secret-key")


# Hosts & CSRF
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost").split(",")
CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS", "http://localhost:3000").split(",")


# Database
DATABASES = {
    "default": dj_database_url.config(
        default=os.getenv("DATABASE_URL", f"sqlite:///{BASE_DIR / 'db.sqlite3'}")
    )
}


# Celery
USE_CELERY = os.getenv("USE_CELERY", "True").lower() == "true"
if USE_CELERY:
    # Use CI Redis if running in GitHub Actions
    if os.getenv("GITHUB_ACTIONS") == "true":
        CELERY_BROKER_URL = os.getenv("LOCAL_REDIS_URL", "redis://localhost:6379/0")
        CELERY_RESULT_BACKEND = os.getenv("LOCAL_REDIS_URL", "redis://localhost:6379/0")
    else:
        # Otherwise use production Redis from env
        CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL", "redis://localhost:6379/0")
        CELERY_RESULT_BACKEND = os.getenv("CELERY_RESULT_BACKEND", "redis://localhost:6379/0")

    CELERY_BEAT_SCHEDULE = {
        'send-showtime-reminders-every-24-hours': {
            'task': 'management.tasks.send_upcoming_showtime_reminders',
            'schedule': crontab(hour=0, minute=0),
        },
    }
else:
    CELERY_BROKER_URL = None
    CELERY_RESULT_BACKEND = None
    CELERY_BEAT_SCHEDULE = {}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#6ia8v+dyaago@ylz$!2a2ak$-1r!^nmyf_b%%@rey8f^ud*sh'

# SECURITY WARNING: don't run with debug turned on in production!


DEBUG = os.getenv("DJANGO_DEBUG", "False") == "True"

ALLOWED_HOSTS = [
    "*",     # add Render's internal health check IP
]


AUTH_USER_MODEL = 'management.User'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'management.apps.ManagementConfig',  # Include the management app
    'rest_framework',  # Django REST framework for API support
    'corsheaders',  # For handling CORS
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Middleware for CORS
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ]
}

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React dev server
    "http://react_app:3000",  # React container
    "https://movie-theater-dots.onrender.com",
    "https://68b9db2a7e02be00087d3838--dali-movie-theater.netlify.app",

]
# Trust the React origin for CSRF purposes
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "https://movie-theater-dots.onrender.com",
    "https://68b9db2a7e02be00087d3838--dali-movie-theater.netlify.app",

]
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = None
SESSION_COOKIE_SAMESITE = None
# In development, allow all origins for CORS
CORS_ALLOW_CREDENTIALS = True  # Allow cookies to be included in CORS requests
ROOT_URLCONF = 'movie_theater.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'movie_theater.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# settings.py
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# Frontend origin and CORS settings
FRONTEND_ORIGIN = os.getenv("FRONTEND_ORIGIN", "")
CORS_ALLOWED_ORIGINS = [FRONTEND_ORIGIN] if FRONTEND_ORIGIN else []
CSRF_TRUSTED_ORIGINS = [FRONTEND_ORIGIN] if FRONTEND_ORIGIN else []

# Determine the environment (development or production)
ENVIRONMENT = os.getenv("DJANGO_ENV", "development")

if ENVIRONMENT == "development":
    DEBUG = True
    CORS_ALLOW_ALL_ORIGINS = False
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",  # React dev server
    ]
    CSRF_TRUSTED_ORIGINS = [
        "http://localhost:3000",
    ]
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
else:  # Production settings
    DEBUG = False
    CORS_ALLOW_ALL_ORIGINS = False
    CORS_ALLOWED_ORIGINS = [
            "https://68b9db2a7e02be00087d3838--dali-movie-theater.netlify.app",
    ]
    CSRF_TRUSTED_ORIGINS = [
        "https://68b9db2a7e02be00087d3838--dali-movie-theater.netlify.app",
    ]
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True

CELERY_WORKER_CANCEL_LONG_RUNNING_TASKS_ON_CONNECTION_LOSS = False
